name: Fox Recovery Builder

on:
  workflow_dispatch:
    inputs:
      crypto:
        description: "Whether to disable the encryption modules, true or false"
        required: false
        default: "false"
      Enable_cache:
        description: "Whether to enable cacheï¼Œtrue or false"
        required: true
        default: "true"
 
env:
  Rec_name: Ofox
  BASE_VER: 9
  FOX_BRANCH: "fox_9.0"
  Rec_url: https://gitlab.com/OrangeFox/sync.git -b master
  device: x554
  # DT_url: https://github.com/skyhuppa/Realme_8_RMX3085 -b fox_11.0
  DT_url: hhttps://github.com/skyhuppa/x554-twrp -b twrp-9.0
  # DT_path: device/realme/RMX3085
  DT_path: device/infinix/x554
  ProductFileHeader: twrp
  target: recoveryimage
  WorkSpace: OrangeFox_sync
  TZ: Africa/Accra
  Author: ${{github.actor}}
  Delete_old: false
  
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: "Cleanup Environment"
        uses: rokibhasansagar/slimhub_actions@main

      - name: Prepare the environment
        run: |
           sudo apt update
           sudo apt -y upgrade
           sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib build-essential libstdc++6 clang zlib1g-dev libpng-dev rsync libssl-dev bison flex aria2 make automake zip wget curl git libc6-dev lib32ncurses5-dev libncurses5-dev libncursesw5-dev libncurses5 libwxgtk3.0-gtk3-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libc6 libc-bin libcurl4-openssl-dev
          # sudo apt install android-sdk
          
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
           swap-size-gb: 12
  
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
           dotnet-version: | 
                6.0.x
    
      - name: Install OpenJDK
        uses: actions/setup-java@v3
        with:
           distribution: 'zulu'
           java-version: '8'

      - name: Setup SSH Keys
        if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') }}
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}
              
   #   - name: Set variables
    #    run: |
    #     echo "::set-output name=date::$(date +%F)"
    #    id: var
      
      - name: Sync recovery source
        run: |
             mkdir ${{env.WorkSpace}}
             git clone ${{env.Rec_url}} --depth=1 --single-branch
             cd sync
             ./orangefox_sync.sh --branch 9.0 --path ~/fox_9.0

      - name: Sync device tree
        run: |
          cd ${{env.WorkSpace}}
          git clone ${{env.DT_url}} --depth=1 --single-branch ${{env.DT_path}}
          
      - name: Disable Crypto
        if: (github.event.inputs.crypto == 'true' && github.event.inputs.crypto  != 'false') || contains(github.event.action, 'crypto')
        run: |
          cd ${{env.WorkSpace}}/${{env.DT_path}}
          sed -i 's/TW_INCLUDE_CRYPTO := true/TW_INCLUDE_CRYPTO := false/g' BoardConfig.mk
          sed -i 's/TW_INCLUDE_CRYPTO_FBE := true/TW_INCLUDE_CRYPTO_FBE := false/g' BoardConfig.mk
          
      - name: Show tree
        run: tree -C -d -L 3
            
      - name: Build ${{env.Rec_name}}
        run: |
          cd ${{env.WorkSpace}}
          echo "::group::Run Envsetup.sh"
          source build/envsetup.sh || true
          echo "::endgroup::"
          echo "::group::Set EnvPath"
          export ALLOW_MISSING_DEPENDENCIES=true
          export FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER=1
          export LC_ALL="C"
          export OF_MAINTAINER="Skyhuppa"
          export FOX_VERSION="Unofficial"
          export OF_SCREEN_H=2160
          export OF_PATCH_AVB20=1
          echo "::endgroup::"
          echo "::group::Lunch ${{env.ProductFileHeader}}_${{env.device}}-eng"
          lunch ${{env.ProductFileHeader}}_${{env.device}}-eng
          echo "::endgroup::"
          echo "::group::Build ${{env.Rec_name}}"
          mka ${{env.target}}
          echo "::endgroup::"
        shell: bash

      - name: Get info
        id: info
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d-%H-%M")"
          echo "::set-output name=OutFolder::"${{env.WorkSpace}}/out/target/product/${{env.device}}""
        shell: bash

      - name: Show Space Info
        run: |
          cd ${{steps.info.outputs.OutFolder}}
          sudo rm -rf ${{env.Rec_name}}_for_${{env.device}}_by_${{env.Author}}_*.zip
          sudo zip -r9 ${{env.Rec_name}}_for_${{env.device}}_by_${{env.Author}}_${{github.run_id}}.zip recovery.img
          echo "::group::Out Directory Space"
          du -sh
          echo "::endgroup::"
          echo "::group::Ccache Directory Space"
          du -sh ~/.ccache
          echo "::endgroup::"
          echo "::group::Disk Space"
          df -hlT /
          echo "::endgroup::"
          echo "::group::Out Tree"
          tree -C -L 5 -I "obj*"
          echo "::endgroup::"
          
      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        with:
          name: ${{env.Rec_name}}_for_${{env.device}}-${{github.run_id}}
          path: ${{steps.info.outputs.OutFolder}}/*.img
          
      - name: Upload Recovery to WeTransfer
        run: |
              curl -sL https://git.io/file-transfer | sh
              ./transfer wet ${{steps.info.outputs.OutFolder}}/*.zip    
              
      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          keep_minimum_runs: 10
